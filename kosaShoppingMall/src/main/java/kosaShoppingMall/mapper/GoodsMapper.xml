<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC 	
	"-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kosaShoppingMall.mapper.GoodsMapper">
	<delete id="goodsDeletes" parameterType="hashMap">
		delete from goods
		<where>
		GOODS_NUM in 
		<foreach collection="cs" item="goodsNum" index="index" open="(" close=")" separator="," >
			#{goodsNum}
		</foreach>
		</where>
	</delete>
	
	<delete id="goodsRemove" parameterType="hashMap">
		delete from goods
	 	<where>
	 	GOODS_NUM in 
		<foreach collection="goodsNums" item="goodsNum" index="index" open="(" close=")" separator="," >
			#{goodsNum}
		</foreach>
		</where>
	</delete>
	
	<delete id="goodsDels" parameterType="hashMap">
		delete from goods
		<where>
		GOODS_NUM in 
		<foreach collection="deletes" item="goodsNum" index="index" open="(" close=")" separator="," >
			#{goodsNum}
		</foreach>
		</where>
	</delete>
	
	
	
	
	
	<delete id="goodsIpgoDels" parameterType="hashMap">
		delete from goodsIpgo
		<where>
		(GOODS_NUM, IPGO_DATE) in 
		<foreach collection="condition" item="nums" index="index" open="(" close=")" separator="," >
			<foreach collection="nums" item="num"  index="index" open="(" close=")" separator=",">
				#{num}
			</foreach>
		</foreach>
		</where>
	</delete>

	<resultMap type="kosaShoppingMall.domain.GoodsIpgoGoodsDTO" id="goodsIpgoGoodsMap">
		<association property="goodsDTO" javaType="goodsDTO" >
	 		<id column="GOODS_NUM" jdbcType="VARCHAR" property="goodsNum"/>
	 		<result column="GOODS_NAME" jdbcType="VARCHAR" property="goodsName"/>
	 		<result column="GOODS_PRICE" jdbcType="BIGINT" property="goodsPrice"/>
	 		<result column="GOODS_CONTENT" jdbcType="VARCHAR" property="goodsContent"/>
	 		<result column="DELIVERY_COST" jdbcType="BIGINT" property="deliveryCost"/>
	 		<result column="VISIT_COUNT" jdbcType="BIGINT" property="vistCount"/>
	 	</association>
		<association property="goodsIpgoDTO" javaType="goodsIpgoDTO" >
			<id column="GOODS_NUM" jdbcType="VARCHAR" property="goodsNum"/>
			<id column="IPGO_DATE" jdbcType="DATE" property="ipgoDate"/>
			<result column="IPGO_QTY" jdbcType="BIGINT" property="ipgoQty"/>
			<result column="MADE_DATE" jdbcType="TIMESTAMP" property="madeDate"/>
		</association>
	</resultMap>
	
	<resultMap type="goodsDTO" id="goodsIpgoGoodsResultMap">
		<id column="GOODS_NUM" jdbcType="VARCHAR" property="goodsNum"/>
	 	<result column="GOODS_NAME" jdbcType="VARCHAR" property="goodsName"/>
	 	<result column="GOODS_PRICE" jdbcType="BIGINT" property="goodsPrice"/>
	 	<result column="GOODS_CONTENT" jdbcType="VARCHAR" property="goodsContent"/>
	 	<result column="DELIVERY_COST" jdbcType="BIGINT" property="deliveryCost"/>
	 	<result column="VISIT_COUNT" jdbcType="BIGINT" property="vistCount"/>
		<association property="goodsIpgoDTO" javaType="goodsIpgoDTO" >
			<id column="GOODS_NUM" jdbcType="VARCHAR" property="goodsNum"/>
			<id column="IPGO_DATE" jdbcType="DATE" property="ipgoDate"/>
			<result column="IPGO_QTY" jdbcType="BIGINT" property="ipgoQty"/>
			<result column="MADE_DATE" jdbcType="TIMESTAMP" property="madeDate"/>
		</association>
	</resultMap>

	<delete id="goodsIpgoDelete" parameterType="kosaShoppingMall.command.GoodsCommand">
		delete from goodsIpgo 
		where GOODS_NUM = #{goodsNum} and IPGO_DATE =#{ipgoDate}
	</delete>
	
	<update id="goodsIpgoUpdate" parameterType="goodsIpgoDTO">
		 update goodsIpgo
		 set  IPGO_QTY =${ipgoQty} , MADE_DATE =#{madeDate}
		 where goods_Num = #{goodsNum} and IPGO_DATE = #{ipgoDate}
	</update>
	
	
	<select id="getGoodsIpgoInfo" parameterType="goodsIpgoDTO" 
					resultMap="goodsIpgoGoodsResultMap">
		select g.GOODS_NUM, g.GOODS_NAME, g.GOODS_PRICE, g.GOODS_CONTENT, 
				g.DELIVERY_COST, g.VISIT_COUNT,
		        i.IPGO_DATE, i.IPGO_QTY, MADE_DATE
		from goods g, goodsipgo i
		where g.GOODS_NUM = i.GOODS_NUM and g.GOODS_NUM = #{goodsNum}
										and i.IPGO_DATE=#{ipgoDate}
	</select>
	
	<select id="ipgoDetail" parameterType="goodsIpgoDTO" resultMap="goodsIpgoGoodsMap">
		select g.GOODS_NUM, g.GOODS_NAME, g.GOODS_PRICE, g.GOODS_CONTENT, 
				g.DELIVERY_COST, g.VISIT_COUNT,
		        i.IPGO_DATE, i.IPGO_QTY, MADE_DATE
		from goods g, goodsipgo i
		where g.GOODS_NUM = i.GOODS_NUM and g.GOODS_NUM = #{goodsNum}
										and i.IPGO_DATE=#{ipgoDate}
	</select>

	<select id="ipgoSelect" resultType="goodsIpgoDTO" parameterType="StartEndPageDTO">
		select * from(
			select rownum rn , IPGO_DATE ipgoDate,GOODS_NUM goodsNum ,IPGO_QTY ipgoQty,MADE_DATE madeDate
			from goodsipgo 
			order by GOODS_NUM desc, IPGO_DATE desc
			)
			where rn between #{startRow} and #{endRow}
	</select>
	<insert id="ipgoInsert" parameterType="goodsIpgoDTO">
		insert into goodsipgo(IPGO_DATE,GOODS_NUM,IPGO_QTY,MADE_DATE)
		values(#{ipgoDate},#{goodsNum},#{ipgoQty},#{madeDate})
	</insert>
	
	<select id="goodsItemCount" parameterType="string" resultType="integer" >
		select count(*) from goods
		<where>
			<if test="goodsWord != null">
				GOODS_NAME like '%'||#{goodsWord}||'%'
		   		or GOODS_CONTENT like '%'||#{goodsWord}||'%'
			</if>
		</where>
	
	</select>
	
	<select id="goodsItems" parameterType="StartEndPageDTO" resultType="goodsDTO">
		select*from(	
			select   rownum rn , GOODS_NUM goodsNum , GOODS_NAME goodsName , GOODS_PRICE goodsPrice ,
			GOODS_CONTENT goodsContent , DELIVERY_COST deliveryCost, 
			VISIT_COUNT vistCount
			from goods 
			<where>
				<if test="goodsWord !=null">
						 GOODS_NAME like '%'||#{goodsWord}||'%'
						or	GOODS_CONTENT like '%'||#{goodsWord}||'%'
				</if>
			</where>
			)
			
			where rn between #{startRow} and #{endRow}
	</select>

	<delete id="goodsDelete" parameterType="goodsDTO">
		delete from goods
		where goods_num = #{goodsNum}
	
	</delete>
	
	<select id="searchGoods" parameterType="string" resultType="goodsDTO">
		select  GOODS_NUM goodsNum , GOODS_NAME goodsName , GOODS_PRICE goodsPrice ,
		GOODS_CONTENT goodsContent , DELIVERY_COST deliveryCost, VISIT_COUNT vistCount
		from goods
		where GOODS_NAME like '%'||#{goodsWord}||'%'
		   or GOODS_CONTENT like '%'||#{goodsWord}||'%'
	</select>
	
	<update id="goodsUpdate" parameterType="goodsDTO">
		update goods
		<trim prefix="set" suffixOverrides=",">
			 GOODS_NAME = #{goodsName}, GOODS_PRICE = #{goodsPrice} ,
			 GOODS_CONTENT = #{goodsContent}, DELIVERY_COST = #{deliveryCost},
			 <if test="goodsImages != null">
			 	GOODS_IMAGES= #{goodsImages}, 
			 	GOODS_ORIGINAL = #{goodsOriginal} ,
			 </if>
			 <if test="goodsMain != null" >
				 GOODS_MAIN = #{goodsMain} , 
				 GOODS_MAIN_ORG = #{goodsMainOrg},
			 </if>
		</trim>
		where goods_num = #{goodsNum}
	</update>
	
	
	<update id="goodsVisitCnt" parameterType="string">
		update goods
		set VISIT_COUNT = visit_count+1
		where goods_num = #{goodsNum}
	
	</update>
	
	<select id="goodsSelectOne" parameterType="string" resultType="goodsDTO">
		select  GOODS_NUM goodsNum , GOODS_NAME goodsName , GOODS_PRICE goodsPrice ,
		GOODS_CONTENT goodsContent , DELIVERY_COST deliveryCost, VISIT_COUNT vistCount
		,goods_main goodsMain, goods_images goodsImages, goods_Original goodsOriginal
		,goods_Main_Org goodsMainOrg
		from goods
		where goods_num = #{goodsNum}
	</select>
	
	<select id="goodsCount" resultType="integer">
		select count(*) from goodsIpgo
	</select>
	
	<select id="count" parameterType="string" resultType="int">
		select count(*) from goods
		<where>
			<if test="goodsWord != null">
				GOODS_NAME like '%'||#{goodsWord}||'%'
		   		or GOODS_CONTENT like '%'||#{goodsWord}||'%'
			</if>
		</where>
	</select>
	
	
	
	<select id="goodsList" resultType="goodsDTO" parameterType="StartEndPageDTO">
	select *
	from (	select rownum rn,  GOODS_NUM goodsNum , GOODS_NAME goodsName , GOODS_PRICE goodsPrice ,
		GOODS_CONTENT goodsContent , DELIVERY_COST deliveryCost, VISIT_COUNT vistCount
		,goods_main goodsMain
		
		from goods
		<where>
			<if test="goodsWord != null">
				GOODS_NAME like '%'||#{goodsWord}||'%'
		   		or GOODS_CONTENT like '%'||#{goodsWord}||'%'
			</if>
		</where>
		order by goodsNum desc
	)
	where rn between #{startRow} and #{endRow}
	</select>
	
	<insert id="goodsInsert" parameterType="goodsDTO"> 
		insert into goods(GOODS_NUM , GOODS_NAME , GOODS_PRICE,
						  GOODS_CONTENT, DELIVERY_COST, VISIT_COUNT
				<if test="goodsMain != null">
					,goods_Main
				</if>
				<if test="goodsImages != null">
					,goods_images
				</if>
				<if test="goodsOriginal != null">
					,goods_Original
				</if>
				<if test="goodsMainOrg != null">
					,goods_Main_Org
				</if>	  
		)
		values(#{goodsNum},#{goodsName},
		       #{goodsPrice},#{goodsContent},#{deliveryCost},0
				<if test="goodsMain != null">
					,#{goodsMain}
				</if>
				<if test="goodsImages != null">
					,#{goodsImages}
				</if>	
				<if test="goodsOriginal != null">
					,#{goodsOriginal}
				</if>
				<if test="goodsMainOrg != null">
					,#{goodsMainOrg}
				</if>
		)
	</insert>

	<select id="goodsAutoNum" resultType="string">
		select 
		concat('goods',nvl(max(substr(goods_num,6)),10000)+1)from goods	
	</select>
</mapper>

