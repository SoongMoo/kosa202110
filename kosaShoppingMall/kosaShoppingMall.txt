쇼핑몰(kosaShoppingMall)
회원        : 회원번호 , 회원아이디, 회원비밀번호, 회원이름, 회원 주소, 등록일, 성별
               연락처, 생년월일 
상품입고 : 수량, 입고 일자, 제조일 
상품       : 상품 번호, 상품명, 가격, 상품정보, 이미지, 대문이미지, 배송비   
상품문의 : 문의번호, 문의 제목, 문의 내용, 문의 종류, 문의 답글
후기 : 후기번호, 후기등록일, 별점, 후기내용
구매 : 구매번호, 구매일 , 구매금액, 배송지, 받는 사람연락처, 요청사항, 구매상태  
구매리스트 : 수량, 가격
장바구니 :  수량
관심상품 : 등록일
배송 : 송장번호, 배송업체명,
결제 : 결제수단, 결제 금액, 결제일 , 승인 번호, 카드번호,
/* 회원 */
CREATE TABLE member (
	member_Num VARCHAR2(10) NOT NULL, /* 회원번호 */
	member_Id VARCHAR2(15), /* 회원아이디 */
	member_Pw VARCHAR2(200), /* 회원비밀번호 */
	member_Name VARCHAR2(15), /* 회원이름 */
	member_addr VARCHAR2(100), /* 회원 주소 */
	member_regist DATE, /* 등록일 */
	gender CHAR(1), /* 성별 */
	member_phone VARCHAR2(13), /* 연락처 */
	member_birth DATE, /* 생년월일 */
	member_ok VARCHAR2(100), /* 본인확인 */
	member_email VARCHAR2(100) /* 회원이메일 */
);

/* 상품입고 */
CREATE TABLE goodsIpgo (
	ipgo_date DATE NOT NULL, /* 입고 일자 */
	goods_num VARCHAR2(10) NOT NULL, /* 상품 번호 */
	ipgo_qty NUMBER, /* 수량 */
	made_date DATE /* 제조일 */
);

/* 상품 */
CREATE TABLE goods (
	goods_num VARCHAR2(10) NOT NULL, /* 상품 번호 */
	goods_name VARCHAR2(100), /* 상품명 */
	goods_price NUMBER, /* 가격 */
	goods_content VARCHAR2(2000), /* 상품정보 */
	goods_images VARCHAR2(200), /* 이미지 */
	goods_main VARCHAR2(200), /* 대문이미지 */
	delivery_cost NUMBER, /* 배송비 */
	visit_count NUMBER /* 조회수 */
);

/* 상품문의 */
CREATE TABLE goods_inquire (
	inquire_num NUMBER NOT NULL, /* 문의번호 */
	goods_num VARCHAR2(10) NOT NULL, /* 상품 번호 */
	member_Num VARCHAR2(10) NOT NULL, /* 회원번호 */
	inquire_subject VARCHAR2(100), /* 문의 제목 */
	inquire_content VARCHAR2(2000), /* 문의 내용 */
	inquire_kind VARCHAR2(20), /* 문의 종류 */
	inquire_answer VARCHAR2(2000), /* 문의 답글 */
	inquire_date DATE, /* 문의 날짜 */
	answer_date DATE /* 답변 날짜 */
);

/* 후기 */
CREATE TABLE review (
	review_num NUMBER NOT NULL, /* 후기번호 */
	goods_num VARCHAR2(10) NOT NULL, /* 상품 번호 */
	review_date DATE, /* 후기등록일 */
	score NUMBER, /* 별점 */
	review_content VARCHAR2(2000), /* 후기내용 */
	member_Num VARCHAR2(10) /* 회원번호 */
);

/* 구매 */
CREATE TABLE purchase (
	purchase_num VARCHAR2(10) NOT NULL, /* 구매번호 */
	purchase_date DATE, /* 구매일 */
	total_price NUMBER, /* 총구매금액 */
	delivery_addr VARCHAR2(200), /* 배송지 */
	delivery_phone VARCHAR2(13), /* 받는사람연락처 */
	message VARCHAR2(200), /* 요구사항 */
	purchase_status VARCHAR2(20), /* 구매상태 */
	member_Num VARCHAR2(10) /* 회원번호 */
);

/* 구매리스트 */
CREATE TABLE purchase_list (
	purchase_num VARCHAR2(10) NOT NULL, /* 구매번호 */
	goods_num VARCHAR2(10) NOT NULL, /* 상품 번호 */
	purchase_qty NUMBER, /* 수량 */
	purchase_price NUMBER /* 가격 */
);

/* 장바구니 */
CREATE TABLE cart (
	member_Num VARCHAR2(10) NOT NULL, /* 회원번호 */
	goods_num VARCHAR2(10) NOT NULL, /* 상품 번호 */
	cart_qty NUMBER /* 수량 */
);

/* 관심상품 */
CREATE TABLE wish (
	goods_num VARCHAR2(10) NOT NULL, /* 상품 번호 */
	member_Num VARCHAR2(10) NOT NULL, /* 회원번호 */
	wish_date DATE /* 등록일 */
);

/* 배송 */
CREATE TABLE delivery (
	purchase_num VARCHAR2(10) NOT NULL, /* 구매번호 */
	delivery_number VARCHAR2(20), /* 송장번호 */
	delivery_company VARCHAR2(100) /* 배송업체명 */
);

/* 결제 */
CREATE TABLE payment (
	purchase_num VARCHAR2(10) NOT NULL, /* 구매번호 */
	payment_kind VARCHAR2(50), /* 결제수단 */
	payment_price NUMBER, /* 결제금액 */
	payment_date DATE, /* 결제일 */
	confirm_number VARCHAR2(20), /* 승인번호 */
	card_number VARCHAR2(15) /* 카드번호 */
);

alter table goodsipgo
add (constraint ipgo_date_goods_num_pk primary key (ipgo_date,goods_num));

alter table goods
add (constraint goods_num_pk primary key (goods_num));

alter table cart
add (constraint member_num_goods_num_pk PRIMARY key (member_num,goods_num));

alter table wish
add constraint member_num_goods_num_pk primary key (member_num,goods_num) ;

alter table member
add (constraint member_num_pk primary key (member_num),
     constraint member_id_uu unique (member_id),
     constraint member_email_uu unique (member_email));
     
alter table goods_inquire
add( constraint goods_inquire_pk primary key (inquire_num, goods_num, member_Num));

alter table review
add( constraint review_num_goods_num_pk primary key (review_num,goods_num));

alter table purchase_list
add( constraint purchase_num_goods_num_pk primary key (purchase_num,goods_num) );

alter table purchase
add( constraint purchase_num_pk primary key (purchase_num));

alter table delivery
add( constraint delivery_pk primary key (purchase_num));

alter table payment
add ( constraint payment_pk primary key (purchase_num) );

alter table goodsipgo
drop constraint goods_num_fk;

alter table goodsipgo
add (constraint goods_num_fk foreign key(goods_num)
     REFERENCES goods(goods_num) on delete cascade);


alter table cart
add( constraint cart_member_num_fk foreign key (member_num)
    REFERENCES member (member_num) on delete CASCADE,
    constraint cart_goods_num_fk FOREIGN key (goods_num)
    REFERENCES goods (goods_num)  on delete CASCADE);
    
alter table wish
add (constraint wish_member_num_fk FOREIGN key (member_num)
    REFERENCES member (member_num)  on delete CASCADE,
    constraint wish_goods_num_fk FOREIGN key (goods_num)
    REFERENCES goods (goods_num)  on delete CASCADE);

alter table goods_inquire
add (constraint g_inquire_member_num_fk FOREIGN key (member_num)
    REFERENCES member (member_num)  on delete CASCADE,
    constraint g_inquire_goods_num_fk FOREIGN key (goods_num)
    REFERENCES goods (goods_num)  on delete CASCADE);

alter table review
add (constraint review_member_num_fk FOREIGN key (member_num)
    REFERENCES  member (member_num)  on delete set null,
    constraint review_goods_num_fk FOREIGN key (goods_num)
    REFERENCES goods (goods_num)  on delete CASCADE);

alter table purchase_list
add (constraint purchase_list_goods_num_fk FOREIGN key (goods_num)
    REFERENCES goods (goods_num) ,
    constraint purchase_list_purchase_num_fk FOREIGN key (purchase_num)
    REFERENCES purchase (purchase_num)  on delete CASCADE);

alter table purchase
add (constraint purchase_member_num_fk foreign key (member_num) 
     REFERENCES member (member_num) on delete set null);

alter table      delivery
add (constraint delivery_purchase_num_fk foreign key (purchase_num)
     REFERENCES purchase (purchase_num) on delete CASCADE);
    
alter table      payment
add (constraint payment_purchase_num_fk foreign key (purchase_num)
     REFERENCES purchase (purchase_num) on delete CASCADE);




























