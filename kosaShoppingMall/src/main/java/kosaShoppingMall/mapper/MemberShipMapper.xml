<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC 	
	"-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kosaShoppingMall.mapper.MemberShipMapper">



<insert id="purchase" parameterType="purchaseDTO">
	insert into purchase(PURCHASE_NUM, PURCHASE_DATE, TOTAL_PRICE,PURCHASE_ADDR,
						PURCHASE_PHONE,MESSAGE,
					     PURCHASE_STATUS, MEMBER_NUM,RECIEVE_NAME )
	values(#{purchaseNum},sysdate,#{totalPrice},#{purchaseAddr},#{purchasePhone},#{message},
						#{purchaseStatus},#{memberNum},#{recieveName})
</insert>

<insert id="purchaseList" parameterType="purchaseListDTO">
	insert into purchase_list (PURCHASE_NUM,GOODS_NUM, PURCHASE_QTY,  PURCHASE_PRICE)
	select           	#{purchaseNum}, c.GOODS_NUM,  CART_QTY  ,  CART_QTY * goods_Price
	from cart c , goods g
	where c.goods_num=g.goods_num and c.goods_num = #{goodsNum}  
	                              and c.member_num = #{memberNum}
</insert>

<delete id="cartGoodsDel" parameterType="goodsBuy">
	delete from cart
	<trim prefix="where"  suffixOverrides="AND|OR">
	 member_num = #{memberNum} and
		 <if test="goodsNums != null">
			 goods_num IN
			<foreach collection="goodsNums" item="goodsNum" index="index" 
												          open="(" close=")" separator="," >
				#{goodsNum}
			</foreach>
		</if>
	</trim> 
</delete>



<delete id="goodsCartDels" parameterType="hashMap">
	delete from cart
	<where>
		goods_num IN
		<foreach collection="goodsNum" item="goodsNums" index="index"
			open="(" close=")" separator=",">
			#{goodsNums}
		</foreach>

	</where>
</delete>

<update id="goodsCartQtyDown" parameterType="kosaShoppingMall.domain.CartDTO">
	update cart
	set cart_qty = cart_qty - 1
	where member_num = #{memberNum} and goods_num = #{goodsNum}
</update>

<resultMap type="kosaShoppingMall.domain.GoodsDTO" id="goodsResultMap">
	<id column="GOODS_NUM" jdbcType="VARCHAR" property="goodsNum"/>
	<result column="GOODS_MAIN" jdbcType="VARCHAR" property="goodsMain"/>
	<result column="GOODS_NAME" jdbcType="VARCHAR" property="goodsName"/>
	<result column="DELIVERY_COST" jdbcType="VARCHAR" property="deliveryCost"/>
</resultMap>
<resultMap type="kosaShoppingMall.domain.CartDTO" id="cartResultMap">
	<id column="GOODS_NUM" jdbcType="VARCHAR" property="goodsNum"/>
	<result column="CART_QTY" jdbcType="BIGINT" property="cartQty"/>
	<result column="total_Price" jdbcType="BIGINT" property="totalPrice"/>
</resultMap>

<resultMap type="GoodsCartDTO" id="GoodsCartResultMap">
	<association property="goodsDTO" javaType="kosaShoppingMall.domain.GoodsDTO" resultMap="goodsResultMap" />
	<association property="cartDTO" javaType="kosaShoppingMall.domain.CartDTO" resultMap="cartResultMap"/>
</resultMap>

<select id="goodsOrder" parameterType="goodsBuy" resultMap="GoodsCartResultMap">
	select GOODS_MAIN, g.GOODS_NUM, GOODS_NAME, DELIVERY_COST, CART_QTY, CART_QTY * GOODS_PRICE total_Price
	from goods g, cart c
	where g.GOODS_NUM = c.GOODS_NUM and MEMBER_NUM =  #{memberNum}
	AND g.GOODS_NUM in
	<foreach collection="goodsNums" item="goodsNum" index="index" open="(" close=")" separator="," >
			#{goodsNum}
	</foreach>
</select>

<select id="cartList" parameterType="string"   resultMap="GoodsCartResultMap">
	select GOODS_MAIN, g.GOODS_NUM, GOODS_NAME, DELIVERY_COST, CART_QTY, CART_QTY * GOODS_PRICE total_Price
	from goods g, cart c
	where g.GOODS_NUM = c.GOODS_NUM and MEMBER_NUM =  #{memberNum}
</select>



<sql id="baseColumns">
member_Num memberNum,member_Id memberId,member_Pw memberPw,
member_Name memberName, member_addr memberAddr,member_regist memberRegist,
gender gender,member_phone memberPhone,member_birth memberBirth, 
member_email memberEmail
</sql>

<sql id="baseColumns1">
member_Num ,member_Id ,member_Pw ,member_Name , member_addr,
member_regist ,gender,member_phone ,member_birth, 
member_email
</sql>

<sql id="AutoNum">
	select nvl(max(substr(MEMber_NUM,5)),100000) + 1 from member
</sql>
<update id="updatePassword" 
	parameterType="memDTO">
	update member
	set member_pw = #{memberPw}
	where member_id = #{memberId}
</update>
<delete id="memberDrop" parameterType="string">
	delete from member
	where member_id = #{memberId}
</delete>
<update id="memberUpdate" parameterType="memDTO">
	update member
	set MEMber_NAME =#{memberName}, MEMber_PHONE = #{memberPhone},
	    MEMber_ADDR = #{memberAddr} , MEMber_EMAIL =#{memberEmail},
	    GENDER = #{gender}, MEMber_BIRTH = #{memberBirth} 
	where MEMber_NUM = #{memberNum}
</update>
<!-- setter -->
<resultMap type="memDTO" id="memberResultMap"> 
	<id column="member_Num" jdbcType="VARCHAR" property="memberNum"/>
	<result column="member_id" jdbcType="VARCHAR" property="memberId" />
	<result column="member_Pw" jdbcType="VARCHAR" property="memberPw" />
	<result column="member_Name" jdbcType="VARCHAR" property="memberName"/>
	<result column="member_addr" jdbcType="VARCHAR" property="memberAddr"/>
	<result column="member_regist" jdbcType="DATE" property="memberNum"/>
	<result column="gender" jdbcType="VARCHAR" property="gender"/>
	<result column="member_phone" jdbcType="VARCHAR" property="memberPhone"/>
	<result column="member_birth" jdbcType="DATE" property="memberBirth"/>
	<result column="member_Email" jdbcType="VARCHAR" property="memberEmail"/>
</resultMap>
<!-- 생성자 -->
<resultMap type="memDTO" id="memberConstructorResultMap">
	<constructor >
		<idArg column="member_Num" javaType="string"/>
		<arg column="member_Num" javaType="string" />
		<arg column="member_Pw" javaType="string" />
		<arg column="member_Name" javaType="string" />
		<arg column="member_addr" javaType="string" />
		<arg column="member_regist" javaType="java.sql.Timestamp" />
		<arg column="gender" javaType="string" />
		<arg column="member_phone" javaType="string" />
		<arg column="member_birth" javaType="java.util.Date" />
		<arg column="member_email" javaType="string" />
		<arg column="member_ok" javaType="string" />
	</constructor>
</resultMap>
<select id="selectOne"  parameterType="string"  resultMap="memberConstructorResultMap">
	select member_Num ,member_Id ,member_Pw ,member_Name , member_addr,
		   member_regist ,gender,member_phone ,member_birth, 
		   member_email, member_ok
	from member
	where member_id = #{memberId}
</select>
<!--  setter
<select id="selectOne" parameterType="string"  resultType="memDTO">
	select <include refid="baseColumns" />
	from member
	where member_id = #{memberId}
</select>
-->
<insert id="memberInsert" 
	parameterType="memDTO">
insert into member( <include refid="baseColumns1" /> )
values(concat('kosa',( <include refid="AutoNum" /> )),
		#{memberId},#{memberPw},#{memberName},#{memberAddr},sysdate,
		#{gender},#{memberPhone},#{memberBirth},#{memberEmail})
</insert>
</mapper>